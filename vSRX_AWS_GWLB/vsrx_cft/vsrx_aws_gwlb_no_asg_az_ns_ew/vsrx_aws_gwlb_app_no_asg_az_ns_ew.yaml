# Copyright (c) Juniper Networks, Inc., 2023. All rights reserved.

---
# Juniper Network vSRX cloud formation template to launch the following resources in AWS
#            * Creates a application VPC by taking the CIDR as params
#            * Creates a private, public and Gwlbe subnet
#            * Creates a GWLB endpoint in the Gwlbe subnet
#            * Creates public, private route table and Gwlbe route table
#            * Attaches the VPC to the TGW
#            * Creates Transit gateway route table to forward all traffic via security VPC attachment
#            * Adds reverse route in the security VPC route table to this VPC attachment

AWSTemplateFormatVersion: 2010-09-09
Description: | 
          Juniper Network vSRX cloud formation template to launch a application VPC with public, private and GWLBe subnet
          along with the GWLB endpoint and a bastion host one in public subnet, and one in private subnet

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "vSRX GWLB Application VPC Network Configuration"
        Parameters: 
          - VpcCidrP
          - UseAzP
          - GwlbeCidrP
          - PublicCidrP
          - PrivateCidrP
          - GwlbServiceNameP
      - Label:
          default: "Transit Gateway Configuration"
        Parameters:
          - TgwIdP
          - TgwSecurityAttachmentIdP
          - TgwSecurityRouteTableIdP
      - Label:
          default: "Bastion Host(Jump Server) in public subnet"
        Parameters: 
          - BastionHostKeyPairP
          - BastionHostAmiIdP
          - BastionHostSgP
    
    ParameterLabels:
      # vSRX GWLB VPC Network Configuration Paramater Label
      VpcCidrP:
        default: "CIDR for the vSRX-GWLB application spoke VPC"
      UseAzP:
        default: "Select the AZ to use to create subnets and GWLB"
      GwlbeCidrP:
        default: "CIDR for the GWLBe subnet of Application spoke VPC(public-subnet)"
      PublicCidrP:
        default: "CIDR for the public subnet of vSRX-GWLB application spoke VPC"
      PrivateCidrP:
        default: "CIDR for the private subnet of vSRX-GWLB application spoke VPC"
      GwlbServiceNameP:
        default: "Service name of the gateway load balancer"
      # Transit gateway configuration
      TgwIdP:
        default: "Transit gateway ID which is in appliance mode"
      TgwSecurityAttachmentIdP:
        default: "Transit gateway security attachment ID to add route"
      TgwSecurityRouteTableIdP:
        default: "Transit gateway security route table ID to add route"
      # Bastion Host Paramater Label
      BastionHostKeyPairP:
        default: "Choose existing keypair to manage bastion host"
      BastionHostAmiIdP:
        default: "Provide the bastion instance AMI-ID"
      BastionHostSgP:
        default: "Provide a source IP address or CIDR to restrict the SSH access, the default is 0.0.0.0/0"
Parameters:
  VpcCidrP:
    Description: "Please specify the application VPC CIDR"
    Type: String
    Default: "10.128.0.0/16"
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/((1[6-9])|(2[0-6])))
    ConstraintDescription: "Please specify the valid IP address in x.x.x.x/16-26 format"

  UseAzP:
    Description: "Please choose the availability zone"
    Type: AWS::EC2::AvailabilityZone::Name
    ConstraintDescription: "Select the valid Availability Zone"

  GwlbeCidrP:
    Description: "Please specify the CIDR for the GWLBe subnet of the application VPC for public subnets"
    Type: String
    Default: "10.128.0.0/24"
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/((1[6-9])|(2[0-6])))
    ConstraintDescription: "Please specify the valid IP address in x.x.x.x/16-26 format"

  PublicCidrP:
    Description: "Please specify the CIDR for the public subnet of the application VPC "
    Type: String
    Default: "10.128.1.0/24"
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/((1[6-9])|(2[0-6])))
    ConstraintDescription: "Please specify the valid IP address in x.x.x.x/16-26 format"
  
  PrivateCidrP:
    Description: "Please specify the CIDR for the private subnet of the application VPC"
    Type: String
    Default: "10.128.2.0/24"
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/((1[6-9])|(2[0-6])))
    ConstraintDescription: "Please specify the valid IP address in x.x.x.x/16-26 format"

  GwlbServiceNameP:
    Description: "Please provide the service name for the gateway load balancer"
    Type: String

  TgwIdP:
    Description: "TGW-ID in appliance mode"
    Type: String
    AllowedPattern: (tgw-[0-9A-Za-z]+)
    ConstraintDescription: "Invalid TGW ID"

  TgwSecurityAttachmentIdP:
    Description: "TGW security VPC attachment ID"
    Type: String
    AllowedPattern: (tgw-attach-[0-9A-Za-z]+)
    ConstraintDescription: "Invalid TGW attachment ID"

  TgwSecurityRouteTableIdP:
      Description: "TGW security VPC attachment route table ID"
      Type: String
      AllowedPattern: (tgw-rtb-[0-9A-Za-z]+)
      ConstraintDescription: "Invalid TGW attachment ID"

  BastionHostAmiIdP:
    Description: "Enter the AMI-ID for the bastion host"
    Type: String
    Default: ami-05fa00d4c63e32376 # ami-05fa00d4c63e32376 FreeTier linux in N Virginia
    AllowedPattern: (ami\-[a-zA-Z0-9-]+)
    ConstraintDescription: "Provide a valid ami ID for the bastion host"

  BastionHostKeyPairP:
    Description: "Choose the existing keypair for bastion host"
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: "Please select the existing keypair name to gain SSH access to the bastion host"

  BastionHostSgP:
    Description: "Provide the CIDR to allow the SSH traffic from outside to BastionHost"
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/\d{1,2})
    ConstraintDescription: "Please specify the valid IP address in x.x.x.x/x format"

Mappings:
  VpcCidrRange:
    DefaultCidr:
      CidrRange10: 10.0.0.0/8
      CidrRange172: 172.16.0.0/12
      CidrRange192: 192.168.0.0/16

Resources:
    VpcR:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCidrP
        EnableDnsHostnames: true
        EnableDnsSupport: true
        InstanceTenancy: "default"
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-vpc'
    
    IgwR:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-vpc-IGW'
    
    AttachIgwR:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VpcR
        InternetGatewayId: !Ref IgwR

    AttachVpcR:
      Type: AWS::EC2::TransitGatewayVpcAttachment
      Properties: 
        AddSubnetIds: 
          - !Ref PrivateSubnetR
        Options: 
          ApplianceModeSupport: enable
        SubnetIds: 
          - !Ref PrivateSubnetR
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-tgw-attachment'
        TransitGatewayId: !Ref TgwIdP
        VpcId: !Ref VpcR

    # Create subnets for GWLB, Public and Private subnet
    GwlbeSubnetR:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref UseAzP
        VpcId: !Ref VpcR
        CidrBlock: !Ref GwlbeCidrP
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-Gwlbe-subnet'

    PublicSubnetR:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref UseAzP
        VpcId: !Ref VpcR
        CidrBlock: !Ref PublicCidrP
        MapPublicIpOnLaunch: true
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-public-subnet'

    PrivateSubnetR:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Ref UseAzP
        VpcId: !Ref VpcR
        CidrBlock: !Ref PrivateCidrP
        MapPublicIpOnLaunch: false   
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-private-subnet'
    
    # Create Gwlbe endpoint
    GwlbeEndPointR:
      Type: AWS::EC2::VPCEndpoint
      Properties: 
        ServiceName: !Ref GwlbServiceNameP
        SubnetIds: 
          - !Ref GwlbeSubnetR
        VpcEndpointType: "GatewayLoadBalancer"
        VpcId: !Ref VpcR
     
    # Create Route tables and subnet associations
    GwlbeRouteTableR:
      Type: AWS::EC2::RouteTable
      Properties: 
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-Gwlbe-route-table'
        VpcId: !Ref VpcR

    PublicRouteEdgeTableR:
      Type: AWS::EC2::RouteTable
      Properties: 
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-public-edge-route'
        VpcId: !Ref VpcR

    PublicRouteEgressTableR:
      Type: AWS::EC2::RouteTable
      Properties: 
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-public-egress-route'
        VpcId: !Ref VpcR

    PrivateRouteTableR:
      Type: AWS::EC2::RouteTable
      Properties: 
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-app-private-route'
        VpcId: !Ref VpcR

    # Subnet and Edge associations
    GwlbeSubnetRouteAssociationR:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref GwlbeRouteTableR
        SubnetId: !Ref GwlbeSubnetR

    PublicRouteEgressAssociationR:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref PublicRouteEgressTableR
        SubnetId: !Ref PublicSubnetR

    # Edge association for ingress route table
    PublicRouteEdgeAssociationR:
      Type: AWS::EC2::GatewayRouteTableAssociation
      Properties: 
        GatewayId: !Ref IgwR
        RouteTableId: !Ref PublicRouteEdgeTableR
      DependsOn:
        - AttachIgwR

    PrivateSubnetRouteAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref PrivateRouteTableR
        SubnetId: !Ref PrivateSubnetR

   # Inter VPC route
    GwlbeRouteTableEntryTGW10R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref GwlbeRouteTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange10
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR
    
    GwlbeRouteTableEntryTGW172R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref GwlbeRouteTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange172
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR

    GwlbeRouteTableEntryTGW192R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref GwlbeRouteTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange192
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR

    GwlbeRouteTableEntryIGWR:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref GwlbeRouteTableR
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref IgwR
      DependsOn: 
        - AttachIgwR

    PrivateRouteTableEntryR:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PrivateRouteTableR
        DestinationCidrBlock: 0.0.0.0/0
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR

    PublicRouteTableEntryIGWR:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteEgressTableR
        DestinationCidrBlock: 0.0.0.0/0
        VpcEndpointId: !Ref GwlbeEndPointR
   
    PublicRouteTableEntryTGW10R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteEgressTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange10
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR
    
    PublicRouteTableEntryTGW172R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteEgressTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange172
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR

    PublicRouteTableEntryTGW192R:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteEgressTableR
        DestinationCidrBlock: !FindInMap 
          - VpcCidrRange
          - DefaultCidr
          - CidrRange192
        TransitGatewayId: !Ref TgwIdP
      DependsOn:
        - AttachVpcR

    PublicRouteTableEntryIngressR:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteEdgeTableR
        DestinationCidrBlock: !Ref PublicCidrP
        VpcEndpointId: !Ref GwlbeEndPointR

    TgwAppRouteTableR:
      Type: AWS::EC2::TransitGatewayRouteTable
      Properties: 
        Tags: 
           - Key: "Name"
             Value: !Sub '${AWS::StackName}-vSRX-app-tgw-route'
        TransitGatewayId: !Ref TgwIdP

    TgwRouteTableAssociationR:
      Type: AWS::EC2::TransitGatewayRouteTableAssociation
      Properties: 
        TransitGatewayAttachmentId: !Ref AttachVpcR
        TransitGatewayRouteTableId: !Ref TgwAppRouteTableR

    TgwRouteTableEntryR:
      Type: AWS::EC2::TransitGatewayRoute
      Properties: 
        DestinationCidrBlock: 0.0.0.0/0
        TransitGatewayAttachmentId: !Ref TgwSecurityAttachmentIdP
        TransitGatewayRouteTableId: !Ref TgwAppRouteTableR

    # Adding route entry for the security VPC attachment to the application VPC
    TgwReverseRouteTableEntryR:
      Type: AWS::EC2::TransitGatewayRoute
      Properties: 
        DestinationCidrBlock: !Ref VpcCidrP
        TransitGatewayAttachmentId: !Ref AttachVpcR
        TransitGatewayRouteTableId: !Ref TgwSecurityRouteTableIdP

    # SG for the bastion host in the Gwlbe1subnet
    BastionGwlbePublicSGR:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: "Security group for the Gwlbe1 and Public subnet of the vSRX application VPC"
        GroupName: !Sub '${AWS::StackName}-vSRX-bastion-host-gwlbe-pub-sg'
        VpcId: !Ref VpcR
        SecurityGroupEgress: 
          - CidrIp: 0.0.0.0/0
            Description: "Egress rule to allow everything"
            FromPort: -1
            IpProtocol: "-1"
            ToPort: -1
        SecurityGroupIngress: 
           - CidrIp: !Ref BastionHostSgP
             Description: "Ingress rule to allow SSH"
             FromPort: 22
             IpProtocol: tcp
             ToPort: 22

           - CidrIp: !Ref GwlbeCidrP
             Description: "Ingress rule to allow SSH"
             FromPort: 22
             IpProtocol: tcp
             ToPort: 22

           - CidrIp: !Ref PublicCidrP
             Description: "Ingress rule to allow everything"
             FromPort: -1
             IpProtocol: "-1"
             ToPort: -1
           - CidrIp: !Ref PrivateCidrP
             Description: "Ingress rule to allow everything"
             FromPort: -1
             IpProtocol: "-1"
             ToPort: -1
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-bastion-gwlbe-host-sg'
    
    BastionPrivateSGR:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: "Security group for the private subnet of the vSRX application VPC"
        GroupName: !Sub '${AWS::StackName}-vSRX-bastion-host-private-sg'
        VpcId: !Ref VpcR
        SecurityGroupEgress: 
          - CidrIp: 0.0.0.0/0
            Description: "Egress rule to allow everything"
            FromPort: -1
            IpProtocol: "-1"
            ToPort: -1
        SecurityGroupIngress: 
           - CidrIp: !Ref PublicCidrP
             Description: "Ingress rule to allow everything"
             FromPort: -1
             IpProtocol: "-1"
             ToPort: -1

           - CidrIp: !Ref PrivateCidrP
             Description: "Ingress rule to allow everything"
             FromPort: -1
             IpProtocol: "-1"
             ToPort: -1
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-bastion-private-host-sg'

    PublicBastionHostR:
      Type: AWS::EC2::Instance
      Properties:
        AvailabilityZone: !Ref UseAzP
        ImageId: !Ref BastionHostAmiIdP
        KeyName: !Ref BastionHostKeyPairP
        InstanceType: t2.micro
        SubnetId: !Ref PublicSubnetR
        SecurityGroupIds:
          - !Ref BastionGwlbePublicSGR
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-bastion-host-public-subnet'

    PrivateBastionHostR:
      Type: AWS::EC2::Instance
      Properties:
        AvailabilityZone: !Ref UseAzP
        ImageId: !Ref BastionHostAmiIdP
        KeyName: !Ref BastionHostKeyPairP
        InstanceType: t2.micro
        SubnetId: !Ref PrivateSubnetR
        SecurityGroupIds:
          - !Ref BastionPrivateSGR
        Tags: 
          - Key: "Name"
            Value: !Sub '${AWS::StackName}-vSRX-bastion-host-private-subnet'
...